{"version":3,"sources":["Pages/Home.js","Pages/About.js","context.js","Pages/Loading.js","Pages/SingleWeather.js","IMAGES/IMAGE.png","Componants/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","to","About","AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","weather","setWeather","Provider","value","Loading","key","apiUrl","url2","SingleWeather","id","useParams","useContext","fetchWeather","useCallback","getWeather","a","fetch","response","json","data","console","log","main","Feeling","feels_like","GroundLevel","grnd_level","Humidity","humidity","Pressure","pressure","SeaLevel","sea_level","Temperature","temp","basic","situation","description","lastUpdated","Date","dt","toString","substring","sys","sunRise","sunrise","sunSet","sunset","sunRisetime","sunSettime","district","name","newWeather1","useEffect","Navbar","src","Image","alt","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ce9a9c6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n\r\n    return <div>\r\n        <h1>Click on the District to know Weather Information</h1>\r\n      \r\n       <ul className='home-links'>\r\n      <li><Link to='/singleweather/Galle'>Galle</Link></li>\r\n      <li><Link to={'/singleweather/Matara'}>Matara</Link></li>\r\n      <li><Link to='/singleweather/Colombo'>Colombo</Link></li>\r\n      <li><Link to={'/singleweather/Kandy'}>Kandy</Link></li>\r\n      <li><Link to='/singleweather/Hambantota'>Hambantota</Link></li>\r\n      <li><Link to='/singleweather/Gampaha'>Gampaha</Link></li>\r\n      <li><Link to='/singleweather/Trincomalee'>Trincomalee</Link></li>\r\n      <li><Link to='/singleweather/Jaffna'>Jaffna</Link></li>\r\n      <li><Link to='/singleweather/Anuradhapura'>Anuradhapura</Link></li>\r\n      <li><Link to='/singleweather/batticaloa'>Batticaloa</Link></li>\r\n      <li><Link to='/singleweather/Badulla'>Badulla</Link></li>\r\n      <li><Link to='/singleweather/Polonnaruwa'>Polonnaruwa</Link></li>\r\n      <li><Link to='/singleweather/Monaragala'>Monaragala</Link></li>\r\n      <li><Link to='/singleweather/Kegalle'>Kegalle</Link></li>\r\n      <li><Link to='/singleweather/Kalutara'>Kaluthara</Link></li>\r\n      <li><Link to='/singleweather/Nuwara Eliya'>Nuwara Eliya</Link></li>\r\n      <li><Link to='/singleweather/Kurunegala'>Kurunagala</Link></li>\r\n      <li><Link to='/singleweather/Haputale'>Haputale</Link></li>\r\n      <li><Link to='/singleweather/Matale'>Matale</Link></li>\r\n      \r\n    </ul>\r\n    </div>\r\n    \r\n      \r\n}\r\n\r\nexport default Home","import React from \"react\";\r\n\r\nconst About = () => {\r\n\r\n    return <h1>About</h1>\r\n}\r\n\r\nexport default About","import React, { useState, useContext} from 'react';\r\n\r\n\r\n\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({children}) => {\r\n    const[loading, setLoading] = useState(false);\r\n    const [weather,setWeather] = useState('');\r\n    return <AppContext.Provider value={{\r\n        loading,\r\n        weather, \r\n        setLoading, \r\n        setWeather,\r\n    }} >{children}</AppContext.Provider>    \r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext)\r\n\r\n}\r\n\r\nexport {AppContext}\r\nexport { AppProvider}\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Loading = () => {\r\n return (\r\n  <div className=\"loader\">\r\n  </div>\r\n )\r\n}\r\n\r\nexport default Loading","import React, {useCallback} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from 'react-router'\r\nimport { useGlobalContext } from \"../context\";\r\nimport Loading from \"./Loading\";\r\nimport Home from './Home'\r\n\r\nconst key = '612b3623df4628e038b90c811fb647bb'\r\nconst apiUrl = 'http://api.openweathermap.org/data/2.5/weather?q='\r\nconst url2 = '&units=metric&appid='\r\n\r\n\r\n\r\nconst SingleWeather = () => {\r\n    const{id} = useParams()\r\n    const {loading,setWeather,setLoading,weather} = useGlobalContext()\r\n    \r\n    const fetchWeather = useCallback (async () => {\r\n         \r\n      setLoading(true);\r\n      async function getWeather(){\r\n        try{\r\n          const response = await fetch((apiUrl)+(id)+(url2)+(key))\r\n          const data = await response.json()\r\n          console.log(data)\r\n          \r\n          if(data){\r\n              const {feels_like:Feeling, \r\n                          grnd_level:GroundLevel, \r\n                          humidity:Humidity,\r\n                          pressure:Pressure,\r\n                          sea_level:SeaLevel,\r\n                          temp:Temperature,\r\n                          \r\n                          \r\n                        } = data.main\r\n              const{\r\n                          main:basic,\r\n                          description:situation,\r\n                        } = data.weather[0]\r\n\r\n              var lastUpdated = new Date(data.dt*1000).toString().substring(0,25)\r\n              \r\n              const {\r\n                sunrise:sunRise,\r\n                sunset:sunSet,\r\n              } = data.sys\r\n              var sunRisetime = new Date(sunRise*1000).toString().substring(0,25)\r\n              const sunSettime = new Date(sunSet*1000).toString().substring(0,25)\r\n              const district = data.name\r\n\r\n                        const newWeather1 = {district,\r\n                          lastUpdated, sunRisetime,sunSettime, basic,situation,Feeling,GroundLevel,Humidity,Pressure,SeaLevel,Temperature,\r\n                        }\r\n\r\n                        setWeather(newWeather1)\r\n                        \r\n                      \r\n                        \r\n                        if(!newWeather1){\r\n                          console.log('Coudnt load data00')\r\n                          console.log(weather)\r\n                        }else{\r\n                          console.log('done')\r\n                          console.log(weather)\r\n                        }\r\n            \r\n          }\r\n          \r\n          setLoading(false)\r\n          return<Home />\r\n        }catch(error){\r\n          \r\n          setLoading(false)\r\n          return<Home />\r\n        }\r\n      }\r\n      getWeather()\r\n    },[id])\r\n\r\n    React.useEffect(() => { \r\n      fetchWeather()\r\n      },[id,fetchWeather])\r\n    \r\n      if(loading){\r\n          return <Loading />\r\n      }\r\n      if(!weather){\r\n        return<h4>No Information to Display. Try again</h4>\r\n      }\r\n      const {district, lastUpdated, sunRisetime,sunSettime, basic,situation,Feeling,GroundLevel,Humidity,Pressure,SeaLevel,Temperature,\r\n      } = weather\r\n      return (\r\n        <section className='section cocktail-section'>\r\n           <Link to='/' className='btn btn-primary'>\r\n            Back to home\r\n          </Link> \r\n          <h2 className='section-title'>{district}</h2>\r\n          <div className='drink'>\r\n                          <div className='drink-info'>\r\n                <p>\r\n                  <span className='drink-data'>lastUpdated :</span>{lastUpdated}\r\n                </p>\r\n                <p>\r\n                  <span className='drink-data'>sunRisetime :</span>{sunRisetime}\r\n                </p>\r\n                <p>\r\n                  <span className='drink-data'>sunSettime :</span>{sunSettime}\r\n                </p>\r\n                <p>\r\n                  <span className='drink-data'>Actual Temperature C :</span>{Temperature}\r\n                </p>\r\n                <p>\r\n                  <span className='drink-data'>General :</span>{basic}\r\n                </p>\r\n                <p>\r\n                  <span className='drink-data'>Clouds :</span>{situation}\r\n                </p><p>\r\n                  <span className='drink-data'>Feeling C :</span>{Feeling}\r\n                </p>\r\n                <p>\r\n                  <span className='drink-data'>GroundLevel Preassure(hpa) :</span>{GroundLevel}\r\n                </p>\r\n                <p>\r\n                  <span className='drink-data'>SeaLevel Preassure(hpa) :</span>{SeaLevel}\r\n                </p>\r\n                <p>\r\n                  <span className='drink-data'>Humidity % :</span>{Humidity}\r\n                </p>\r\n                <p>\r\n                  <span className='drink-data'>Pressure(hpa) :</span>{Pressure}\r\n                </p>\r\n               \r\n                \r\n               \r\n              </div>\r\n          </div>\r\n        </section>\r\n      )\r\n    \r\n\r\n}\r\n\r\nexport default SingleWeather","export default __webpack_public_path__ + \"static/media/IMAGE.50d81bb5.png\";","import React from \"react\";\r\nimport Image from '../IMAGES/IMAGE.png'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n\r\n    return <nav className='navbar'>\r\n       \r\n    <div className=\"nav-center\">\r\n      <Link to='/'>\r\n        <img src={Image} alt='' className=\"logo\"/></Link>\r\n    </div>\r\n    <ul className='nav-links'>\r\n      <li><Link to='/'>Home</Link></li>\r\n      <li><Link to='/About'>About</Link></li>\r\n    </ul> \r\n  </nav>\r\n}\r\n\r\nexport default Navbar","import './App.css';\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\n\n//import pages\nimport Home from './Pages/Home'\nimport About from './Pages/About'\n\nimport SingleWeather from './Pages/SingleWeather'\n\n//import Componants\nimport Navbar from './Componants/Navbar'\n\n\nfunction App() {\n  return (\n    <Router>\n     \n     <Navbar />\n     <Routes>\n      <Route exact path='/' element={<Home/>} />\n      <Route path='/about' element={<About/>} />\n     \n      <Route path='/singleweather/:id' element={<SingleWeather/>} />\n\n     </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AppProvider} from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider><App /></AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}